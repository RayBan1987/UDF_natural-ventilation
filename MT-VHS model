/*******************************************************************
UDF for specifying an energy and mass source term to simulate fire 
*******************************************************************/
/*this is valid for natural ventilation*/

#include "udf.h"

#define a 0.2 
#define b 0.1    /*a and b are dimension of pool fire, respectively, in meter*/
#define Q 10.04  /*Q is heat release rate, in kW*/
#define surfNO 34 /*branch tunnel end surface ID, must be checked before calculating*/
#define Rg 287  /*universal gas constant, J/kgK*/

DEFINE_SOURCE(heat_source,c,t,dS,eqn)
{
    real xc[ND_ND];
    real D,lf,xmax,xmin,zmin,zmax,source,volume,Q_xing;
    C_CENTROID(xc,c,t);
    D=2*(a+b)/M_PI;      /*D is perimeter diamter*/
	Q_xing=Q/(1.2*1.0*300*sqrt(9.81)*pow(D,2.5));  /*Q_xing is dimensionless heat release rate*/
	lf=(3.7*pow(Q_xing,0.4)-1.02)*D;  /*calculate the height of fire*/
	lf=(lf>0.45)?0.45:lf;  /*judge whether lf is higher than tunnel height*/
	volume=a*b*lf;  /*calculate the volume of fire source*/
	
    xmax=0.3+a/2;
    xmin=0.3-a/2;
    zmax=4.5+b/2;
    zmin=4.5-b/2;
    
    /*now begins to judge*/
    if (xc[0]<=xmax && xc[0]>=xmin && xc[2]<=zmax && xc[2]>=zmin && xc[1]<=lf)
	{
		source=Q*1000/volume;
        dS[eqn] = 0.0;
	}
	else
	{
		source=0;
        dS[eqn] = 0.0;
	}
    return source;
}

DEFINE_SOURCE(mass_source,c,t,dS,eqn)
{
    real xc[ND_ND];
    real D,lf,xmax,xmin,zmin,zmax,source,volume,Q_xing;
    C_CENTROID(xc,c,t);
    D=2*(a+b)/M_PI;   /*D is perimeter diamter*/
	Q_xing=Q/(1.2*1.0*300*sqrt(9.81)*pow(D,2.5));
	lf=(3.7*pow(Q_xing,0.4)-1.02)*D;  /*calculate the height of fire*/
	lf=(lf>0.45)?0.45:lf;
	volume=a*b*lf;/*calculate the volume of fire source*/
	
    xmax=0.3+a/2;
    xmin=0.3-a/2;
    zmax=4.5+b/2;
    zmin=4.5-b/2;
    
    /*now begins to judge*/
    if (xc[0]<=xmax && xc[0]>=xmin && xc[2]<=zmax && xc[2]>=zmin && xc[1]<=lf)
	{
		if ((3.7*pow(Q_xing,0.4)-1.02)*D>0.45)   /*flame touch the ceiling*/
		    {  source=0.426*pow(Q,1.0/3)*pow(lf,2.0/3)/a/pow(b,3.0)*pow(xc[2]-4.5,2.0)+0.0355*pow(Q,1.0/3)*pow(lf,2.0/3)/(a*b);
		       dS[eqn] = 0.0;}
		else    /*flame not touch the ceiling*/
		    { source=0.1704*pow(Q,1.0/3)*pow(lf,2.0/3)/a/pow(b,3.0)*pow(xc[2]-4.5,2.0)+0.0568*pow(Q,1.0/3)*pow(lf,2.0/3)/(a*b);
		       dS[eqn] = 0.0;}
	}
	else
	{
		source=0;
        dS[eqn] = 0.0;
	}
    return source;
}
